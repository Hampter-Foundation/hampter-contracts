name: Smart Contract CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
      - run: npm install -g solhint ethlint
      - run: solhint 'contracts/**/*.sol'

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Cache Hardhat compilation
        uses: actions/cache@v3
        with:
          path: artifacts
          key: ${{ runner.OS }}-hardhat-${{ hashFiles('contracts/**/*.sol') }}
      - run: npm ci
      - run: npx hardhat compile
      - run: npx hardhat test
      - uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install Slither
        run: |
          pip3 install slither-analyzer
          pip3 install solc-select
          solc-select install 0.8.19
          solc-select use 0.8.19
      - name: Run Slither
        run: slither . --hardhat-ignore-compile
      - name: Install Echidna
        run: |
          wget https://github.com/crytic/echidna/releases/download/v2.0.4/echidna-test-2.0.4-Ubuntu-18.04.tar.gz
          tar -xf echidna-test-2.0.4-Ubuntu-18.04.tar.gz
          sudo mv echidna-test /usr/local/bin/
      # - name: Run Echidna
      #   run: |
      #     mkdir -p echidna-reports
      #     for file in contracts/*.sol; do
      #       contract=$(basename $file .sol)
      #       echidna-test $file --contract $contract --config echidna.config.yml --format text > echidna-reports/$contract.txt
      #     done
      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: echidna-reports
      #     path: echidna-reports
